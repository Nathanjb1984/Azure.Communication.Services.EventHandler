<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Authors>Jason Shave</Authors>
    <Company>Jason Shave</Company>
    <Description>A set of extensions used to simplify the developer experience when using the Azure Communication Service Interaction Controller SDK</Description>
    <Copyright>Jason Shave</Copyright>
    <PackageIcon></PackageIcon>
    <PackageReadmeFile></PackageReadmeFile>
    <PackageId>JasonShave.Azure.Communication.Service.$(AssemblyName)</PackageId>
    <Product>JasonShave.Azure.Communication.Service.$(AssemblyName)</Product>
    <AssemblyName>JasonShave.Azure.Communication.Service.$(MSBuildProjectName)</AssemblyName>
    <RootNamespace>JasonShave.Azure.Communication.Service.$(MSBuildProjectName.Replace(" ", "_"))</RootNamespace>
    <PackageProjectUrl>https://github.com/jasonshave/JasonShave.Azure.Communication.Service.CallingServer.Extensions</PackageProjectUrl>
    <RepositoryUrl>https://github.com/jasonshave/JasonShave.Azure.Communication.Service.CallingServer.Extensions</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Azure Communication Service; ACS; Server Calling; Jason Shave</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Communication.CallingServer" Version="1.0.0-alpha.20220701.1" />
    <PackageReference Include="Azure.Core" Version="1.24.0" />
    <PackageReference Include="Azure.Messaging.EventGrid" Version="4.10.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="6.0.0" />
    <InternalsVisibleTo Include="Interaction.Sdk.Tests" />
  </ItemGroup>

	<ItemGroup>
		<!-- Make assembly visible to test assembly -->
		<AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
			<_Parameter1>$(AssemblyName).Tests</_Parameter1>
		</AssemblyAttribute>

		<!-- Make assembly usable for Moq, so Moq is able to instanciate objects of 'internal' types -->
		<AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
			<_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
		</AssemblyAttribute>
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Interaction.Sdk.Contracts\Interaction.Sdk.Contracts.csproj" />
	</ItemGroup>

	<ItemGroup>
    <None Update="jasonshave.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
